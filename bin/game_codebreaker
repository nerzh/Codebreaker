#!/usr/bin/env ruby

require "game_codebreaker"
require "byebug"

module GameCodebreaker

  class Interface

    def initialize
      @games = []
    end

    def start
      level = question( mess :level )
      length = question( mess :length ).to_i
      length = 4 if length <= 0
      game = Game.new(level: (Options.level(level))[:level], hint: (Options.level(level))[:hint], length: length)
      play( game )
    end

    def play( game )
      string = question( mess :enter )
      out if string == "exit"
      get_hint( string, game )
      cheat( string, game )
      game.respond( string )
      p game.history.last.last
      game_over?( game )
      play( game )
    end

    def question( mess )
      p mess
      value = $stdin.gets.chomp
    end

    def out
      p mess :collector
      exit 1
    end

    def cheat( string, game )
      if string == "cheat"
        p game.code
        play( game )
      end
    end

    def get_hint( string, game )
      if string == "get hint"
        game.get_hint
        p game.hints.last
        play( game ) 
      end
    end

    def game_over?( game )
      if game.game_over?
        game.win? ? ( p "YOU WIN !" ) : ( p game.code; p 'YOU LOSE !' )
        restart?( game )
        save?( game )
        out
      end
    end

    def get_user_data
      user = question( mess :data )
      get_user_data unless user =~ /^(.+)\s(.+)\s(.+)$/
      array = [name = $1, surname = $2, age = $3]
    end

    def restart?( game )
      if question( mess :replay ).capitalize == "Y"
        @games << game
        start
      end
    end

    def save?( game )
      user_data = get_user_data if question( mess :save ).capitalize == "Y"
      if user_data
        @games << game
        user = User.new( user_data[0], user_data[1], user_data[2], @games )
        memory = Memory.new( "./dump" )
        memory.save( user )
        print_info( memory.info(user) )
      end
    end

    def print_info( array )
      p "Name:                    " << array[0]
      p "Surname:                 " << array[1]
      p "Age                      " << array[2]
      p "Total games              " << array[3].to_s
      p "Total wins               " << array[4].to_s
      p "Total losses             " << array[5].to_s
      p "Average amount of turns  " << array[6].to_s
      p "Average amount of level  " << array[7].to_s
    end

    def mess( value )
      case value
        when :enter
          %Q^ Enter your integer and press 'Enter' ^
        when :replay
          %Q^ Replay ? -- Y/N ^
        when :level
          %Q^ Select and enter level. ( low | normal | hard ) ^
        when :save
          %Q^ Save games? -- Y/N ^
        when :collector
          %Q^ I am waiting the GARBAGE COLLECTOR ^
        when :data
          %Q^ Please enter your data separated by a space and press 'Enter'. Example: Name Surname Age ^
        when :length
          %Q^ Please enter quantity digits ^
        else
          %Q^ читер ? ^
      end
    end

  end
end

( p "Game Code-Breaker for RubyGarage"; GameCodebreaker::Interface.new().start ) if ARGV[0] == "start"
